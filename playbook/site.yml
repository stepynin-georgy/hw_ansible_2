---
- name: Install Clickhouse
  hosts: clickhouse
  handlers:

    - name: Start clickhouse service
      become: true
      ansible.builtin.service:
        name: clickhouse-server
        state: restarted

    - name: Start Vector service
      become: true
      ansible.builtin.service:
        name: vector
        state: restarted

  tasks:
    - name: Get clickhouse distrib
      tags: clickhouse

      block:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/{{ item }}-{{ clickhouse_version }}.noarch.rpm"
            dest: "./{{ item }}-{{ clickhouse_version }}.rpm"
            mode: "0644"
          with_items: "{{ clickhouse_packages }}"
      rescue:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/clickhouse-common-static-{{ clickhouse_version }}.x86_64.rpm"
            dest: "./clickhouse-common-static-{{ clickhouse_version }}.rpm"
            mode: "0644"

    - name: Install clickhouse packages
      become: true
      ansible.builtin.yum:
        name:
          - clickhouse-common-static-{{ clickhouse_version }}.rpm
          - clickhouse-client-{{ clickhouse_version }}.rpm
          - clickhouse-server-{{ clickhouse_version }}.rpm
      notify: Start clickhouse service

    - name: Flush handlers
      ansible.builtin.meta: flush_handlers

    - name: Wait for clickhouse-server to become available
      ansible.builtin.pause:
        seconds: 15
        echo: false

    - name: Create database
      ansible.builtin.command: "clickhouse-client -q 'create database logs;'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc != 82
      changed_when: create_db.rc == 0
      tags: clickhouse

    - name: Install, configure, and start Vector
      tags: vector
      block:
        - name: Create vector work directory
          become: true
          ansible.builtin.file:
            path: "{{ vector_workdir }}"
            state: directory
            mode: "0755"

        - name: Get Vector distrib
          become: true
          ansible.builtin.get_url:
            url: "https://packages.timber.io/vector/{{ vector_version }}/vector-{{ vector_version }}-{{ vector_os_arch }}-unknown-linux-gnu.tar.gz"
            dest: "{{ vector_workdir }}/vector-{{ vector_version }}-{{ vector_os_arch }}-unknown-linux-gnu.tar.gz"
            mode: "0644"

        - name: Unzip Vector archive
          become: true
          ansible.builtin.unarchive:
            remote_src: true
            src: "{{ vector_workdir }}/vector-{{ vector_version }}-{{ vector_os_arch }}-unknown-linux-gnu.tar.gz"
            dest: "{{ vector_workdir }}"

        - name: Install Vector binary
          become: true
          ansible.builtin.copy:
            remote_src: true
            src: "{{ vector_workdir }}/vector-{{ vector_os_arch }}-unknown-linux-gnu/bin/vector"
            dest: "/usr/bin/"
            mode: "0755"
            owner: root
            group: root

        - name: Check Vector installation
          become: true
          ansible.builtin.command: "vector --version"
          register: var_vector
          failed_when: var_vector.rc != 0
          changed_when: var_vector.rc == 0

        - name: Create Vector config vector.toml
          become: true
          ansible.builtin.template:
            src: template/vector.toml
            dest: /etc/vector
            owner: root
            group: root
            mode: '0644'
            backup: true

        - name: Create vector.service daemon
          become: true
          ansible.builtin.copy:
            remote_src: true
            src: "{{ vector_workdir }}/vector-{{ vector_os_arch }}-unknown-linux-gnu/etc/systemd/vector.service"
            dest: "/lib/systemd/system/"
            mode: "0644"
            owner: root
            group: root
          notify: Start Vector service

        - name: Modify vector.service file
          become: true
          ansible.builtin.replace:
            backup: true
            path: "/lib/systemd/system/vector.service"
            regexp: "^ExecStart=/usr/bin/vector$"
            replace: "ExecStart=/usr/bin/vector --config /etc/vector/vector.toml"
          notify: Start Vector service

        - name: Create user vector
          become: true
          ansible.builtin.user:
            create_home: false
            name: "{{ vector_os_user }}"

        - name: Create Vector data_dir
          become: true
          ansible.builtin.file:
            path: "/var/lib/vector"
            state: directory
            mode: "0755"
            owner: "{{ vector_os_user }}"
            group: "{{ vector_os_group }}"
